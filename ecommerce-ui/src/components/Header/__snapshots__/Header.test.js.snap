// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Header /> Snapshot test 1`] = `
<Header
  cartContent={
    Array [
      Object {
        "host": Object {
          "isSuperhost": true,
          "name": "Robert",
        },
        "houseType": "Apartment",
        "image": "https://images.unsplash.com/photo-1490806230066-f7e6f7bf5052?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=2ca889535ea01f912f94ac4ddf0034e0&auto=format&fit=crop&w=500&q=80",
        "location": Object {
          "city": "New York",
          "country": "USA",
        },
        "payment": Object {
          "cost": 105,
          "description": "Free cancellation",
        },
        "rating": Object {
          "reviews": 133,
          "stars": 3,
        },
        "title": "Centrally-located Manhattan studio",
      },
    ]
  }
>
  <div>
    <div>
      <button
        className="btn btn-danger"
        onClick={[Function]}
        style={
          Object {
            "border": "0px",
            "height": "40px",
            "width": "150px",
          }
        }
        type="button"
      >
        Add Listing    
        <MdAddBox
          size={30}
        >
          <IconBase
            size={30}
            viewBox="0 0 40 40"
          >
            <svg
              fill="currentColor"
              height={30}
              preserveAspectRatio="xMidYMid meet"
              style={
                Object {
                  "color": undefined,
                  "verticalAlign": "middle",
                }
              }
              viewBox="0 0 40 40"
              width={30}
            >
              <g>
                <path
                  d="m28.4 21.6v-3.2h-6.8v-6.8h-3.2v6.8h-6.8v3.2h6.8v6.8h3.2v-6.8h6.8z m3.2-16.6c1.8 0 3.4 1.6 3.4 3.4v23.2c0 1.8-1.6 3.4-3.4 3.4h-23.2c-1.9 0-3.4-1.6-3.4-3.4v-23.2c0-1.8 1.5-3.4 3.4-3.4h23.2z"
                />
              </g>
            </svg>
          </IconBase>
        </MdAddBox>
      </button>
    </div>
    <div
      style={
        Object {
          "textAlign": "right",
        }
      }
    >
      <button
        className="btn btn-default"
        onClick={[Function]}
        style={
          Object {
            "border": "0px",
            "height": "40px",
            "width": "150px",
          }
        }
        type="button"
      >
        Checkout    
        <MdShoppingCart
          size={30}
        >
          <IconBase
            size={30}
            viewBox="0 0 40 40"
          >
            <svg
              fill="currentColor"
              height={30}
              preserveAspectRatio="xMidYMid meet"
              style={
                Object {
                  "color": undefined,
                  "verticalAlign": "middle",
                }
              }
              viewBox="0 0 40 40"
              width={30}
            >
              <g>
                <path
                  d="m28.4 30c1.8 0 3.2 1.6 3.2 3.4s-1.4 3.2-3.2 3.2-3.4-1.4-3.4-3.2 1.6-3.4 3.4-3.4z m-26.8-26.6h5.5l1.6 3.2h24.7c0.9 0 1.6 0.8 1.6 1.8 0 0.3-0.1 0.5-0.2 0.7l-6 10.8c-0.5 1-1.6 1.7-2.9 1.7h-12.4l-1.5 2.8 0 0.2c0 0.2 0.1 0.4 0.3 0.4h19.3v3.4h-20c-1.8 0-3.2-1.6-3.2-3.4 0-0.5 0.1-1.1 0.3-1.6l2.3-4.1-6-12.7h-3.4v-3.2z m10 26.6c1.8 0 3.4 1.6 3.4 3.4s-1.6 3.2-3.4 3.2-3.2-1.4-3.2-3.2 1.4-3.4 3.2-3.4z"
                />
              </g>
            </svg>
          </IconBase>
        </MdShoppingCart>
      </button>
    </div>
    <cart
      cartContent={
        Array [
          Object {
            "host": Object {
              "isSuperhost": true,
              "name": "Robert",
            },
            "houseType": "Apartment",
            "image": "https://images.unsplash.com/photo-1490806230066-f7e6f7bf5052?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=2ca889535ea01f912f94ac4ddf0034e0&auto=format&fit=crop&w=500&q=80",
            "location": Object {
              "city": "New York",
              "country": "USA",
            },
            "payment": Object {
              "cost": 105,
              "description": "Free cancellation",
            },
            "rating": Object {
              "reviews": 133,
              "stars": 3,
            },
            "title": "Centrally-located Manhattan studio",
          },
        ]
      }
      cartShow={false}
      handleCartClose={[Function]}
    >
      <Modal
        animation={true}
        autoFocus={true}
        backdrop={true}
        bsClass="modal"
        dialogComponentClass={[Function]}
        enforceFocus={true}
        keyboard={true}
        manager={
          ModalManager {
            "add": [Function],
            "containers": Array [],
            "data": Array [],
            "handleContainerOverflow": true,
            "hideSiblingNodes": true,
            "isTopModal": [Function],
            "modals": Array [],
            "remove": [Function],
          }
        }
        onHide={[Function]}
        renderBackdrop={[Function]}
        restoreFocus={true}
        show={false}
      >
        <Modal
          autoFocus={true}
          backdrop={true}
          backdropClassName="modal-backdrop"
          backdropTransition={[Function]}
          containerClassName="modal-open"
          enforceFocus={true}
          keyboard={true}
          manager={
            ModalManager {
              "add": [Function],
              "containers": Array [],
              "data": Array [],
              "handleContainerOverflow": true,
              "hideSiblingNodes": true,
              "isTopModal": [Function],
              "modals": Array [],
              "remove": [Function],
            }
          }
          onEntering={[Function]}
          onExited={[Function]}
          onHide={[Function]}
          renderBackdrop={[Function]}
          restoreFocus={true}
          show={false}
          transition={[Function]}
        />
      </Modal>
    </cart>
    <NewListingModal
      formShow={false}
      handleFormClose={[Function]}
    >
      <Modal
        animation={true}
        autoFocus={true}
        backdrop={true}
        bsClass="modal"
        dialogComponentClass={[Function]}
        enforceFocus={true}
        keyboard={true}
        manager={
          ModalManager {
            "add": [Function],
            "containers": Array [],
            "data": Array [],
            "handleContainerOverflow": true,
            "hideSiblingNodes": true,
            "isTopModal": [Function],
            "modals": Array [],
            "remove": [Function],
          }
        }
        onHide={[Function]}
        renderBackdrop={[Function]}
        restoreFocus={true}
        show={false}
      >
        <Modal
          autoFocus={true}
          backdrop={true}
          backdropClassName="modal-backdrop"
          backdropTransition={[Function]}
          containerClassName="modal-open"
          enforceFocus={true}
          keyboard={true}
          manager={
            ModalManager {
              "add": [Function],
              "containers": Array [],
              "data": Array [],
              "handleContainerOverflow": true,
              "hideSiblingNodes": true,
              "isTopModal": [Function],
              "modals": Array [],
              "remove": [Function],
            }
          }
          onEntering={[Function]}
          onExited={[Function]}
          onHide={[Function]}
          renderBackdrop={[Function]}
          restoreFocus={true}
          show={false}
          transition={[Function]}
        />
      </Modal>
    </NewListingModal>
  </div>
</Header>
`;
